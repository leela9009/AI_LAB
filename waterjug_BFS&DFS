#BFS

m, n = [int(x) for x in input("Enter jug capacities : ").split()]
res = int(input("Enter final result : "))

root = [0, 0]
dest = [res, 0]

def water_jug_bfs(r, d, m, n): #5, 3
    visited = []
    open = [r]
    while(d not in open):
        x = open.pop(0)
        pos = []
        if x[0]==0:
            pos.append([m, x[1]])
        if x[1]==0:
            pos.append([x[0], n])
        if x[0]==m:
            pos.append([0, x[1]])
        if x[1]==n:
            pos.append([x[0], 0])
        # 3 1
        if x[0]>0 and n-x[1]>0 :
            a = n-x[1]
            if a>=x[0]: # 1 1  or 2 1
                pos.append([0, x[0]+x[1]])
            else: # 3 1
                pos.append([x[0]-a, x[1]+a])
        if x[1]>0 and m-x[0]>0 :
            a = m-x[0]
            if a>=x[1]: # 1 1  or 2 1
                pos.append([0, x[1]+x[0]])
            else: # 3 1
                pos.append([x[1]-a, x[0]+a])
        visited.append(x)
        for i in pos:
            if i not in open+visited:
                open.append(i)
        print(open, visited)
        
        

g = water_jug_bfs(root, dest, m, n)

#DFS

m, n = [int(x) for x in input("Enter jug capacities : ").split()]
res = int(input("Enter final result : "))

root = [0, 0]
dest = [res, 0]

def water_jug_dfs(r, d, m, n): #5, 3
    visited = []
    open = [r]
    while(d not in open):
        x = open.pop(0)
        pos = []
        if x[0]==0:
            pos.append([m, x[1]])
        if x[1]==0:
            pos.append([x[0], n])
        if x[0]==m:
            pos.append([0, x[1]])
        if x[1]==n:
            pos.append([x[0], 0])
        # 3 1
        if x[0]>0 and n-x[1]>0 :
            a = n-x[1]
            if a>=x[0]: # 1 1  or 2 1
                pos.append([0, x[0]+x[1]])
            else: # 3 1
                pos.append([x[0]-a, x[1]+a])
        if x[1]>0 and m-x[0]>0 :
            a = m-x[0]
            if a>=x[1]: # 1 1  or 2 1
                pos.append([0, x[1]+x[0]])
            else: # 3 1
                pos.append([x[1]-a, x[0]+a])
        visited.append(x)
        for i in pos[::-1]:
            if i not in open+visited:
                open.insert(0, i)
        print(open, visited)
        
        

g = water_jug_dfs(root, dest, m, n)
